version: '3.2'

services:
    redis:
        image: 'redis:5.0.5'
        # command: redis-server --requirepass redispass

    postgres:
        image: postgres:9.6
        env_file:
            - airflow-variables.env
        ports:
            - "5432"

    webserver:
        image: airflow_docker:1.0
        restart: always
        depends_on:
            - postgres
            - redis
        env_file:
            - airflow-variables.env
        ports:
            - "8080:8080"
        command: webserver
        healthcheck:
            test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
            interval: 30s
            timeout: 30s
            retries: 3

    flower:
        image: airflow_docker:1.0
        restart: always
        depends_on:
            - redis
        env_file:
            - airflow-variables.env
        ports:
            - "5555:5555"
        command: flower

    scheduler:
        image: airflow_docker:1.0
        restart: always
        depends_on:
            - webserver
        env_file:
            - airflow-variables.env
        command: scheduler

    worker:
        image: airflow_docker:1.0
        restart: always
        depends_on:
            - scheduler
        volumes:
            - type: bind  # change for NFS or local
              source: ${INPUT_VOL}   # change for NFS or local
              target: /usr/local/airflow/input_files
            - type: bind   # change for NFS or local
              source: ${OUTPUT_VOL}  # change for NFS or local
              target: /usr/local/airflow/output_files
        env_file:
            - airflow-variables.env
        environment:
            - DBGAP_INPUT_FILES=/usr/local/airflow/input_files
            - DBGAP_OUTPUT_FILES=/usr/local/airflow/output_files
        command: worker

# volumes:  # change for NFS or local
#     input_vol:
        # driver_opts:
        #     type: "nfs"
        #     o: "addr=192.168.1.152,nolock,soft,rw"
        #     device: ":/var/nfs/gaptools"